{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91797\\\\Desktop\\\\JavaScript\\\\React\\\\text-utils\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./MyComponents/Header\";\nimport Hero from \"./MyComponents/Hero\";\nimport Alert from \"./MyComponents/Alert\";\n// import Contact from \"./MyComponents/Contact\";\n// import Footer from \"./MyComponents/Footer\";\n// import About from \"./MyComponents/About\";\n// import {Routes, Route} from \"react-router-dom\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState(\"white\"); //check if dark mode is enabled\n  const toggleMode = () => {\n    if (mode === 'black') {\n      setMode('white');\n      document.body.style.backgroundColor = \"#cbb4f587\";\n      showAlert(\"Light Mode Enabled\", \"info\");\n    } else {\n      setMode('black');\n      showAlert(\"Dark Mode Enabled\", \"dark\");\n      document.body.style.backgroundColor = \"rgb(39, 37, 37)\";\n    }\n  };\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2100);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      link1: \"Projects\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      upc: \"Uppercase\",\n      lwc: \"Lowercase\",\n      mode: mode,\n      showAlert: showAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"IO7Iu13rWQpVRnlm5qFd4gMpqZU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Hero","Alert","App","mode","setMode","toggleMode","document","body","style","backgroundColor","showAlert","alert","setAlert","message","type","msg","setTimeout"],"sources":["C:/Users/91797/Desktop/JavaScript/React/text-utils/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./MyComponents/Header\";\r\nimport Hero from \"./MyComponents/Hero\";\r\nimport Alert from \"./MyComponents/Alert\";\r\n// import Contact from \"./MyComponents/Contact\";\r\n// import Footer from \"./MyComponents/Footer\";\r\n// import About from \"./MyComponents/About\";\r\n// import {Routes, Route} from \"react-router-dom\"\r\n\r\nconst App = () => {\r\nconst [mode, setMode] = useState(\"white\"); //check if dark mode is enabled\r\nconst toggleMode=()=>{\r\n  if(mode==='black'){\r\n    setMode('white');\r\n    document.body.style.backgroundColor = \"#cbb4f587\";\r\n    showAlert(\"Light Mode Enabled\", \"info\");\r\n  }\r\n  else{\r\n    setMode('black')\r\n    showAlert(\"Dark Mode Enabled\", \"dark\");\r\n    document.body.style.backgroundColor = \"rgb(39, 37, 37)\"\r\n  }}\r\n  const [alert, setAlert] = useState(null)\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      msg : message,\r\n      type:  type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 2100);\r\n  }\r\nreturn (\r\n  <>\r\n  {/* PUTING THE HEADER OUTSIDE OF THE ROUTES AS THIS WOULD EXIST THERE ALL THE TIME */}\r\n    <Header link1=\"Projects\" mode={mode} toggleMode={toggleMode}/>\r\n    <Alert alert={alert}/>\r\n    <Hero upc=\"Uppercase\" lwc=\"Lowercase\" mode={mode} showAlert={showAlert}/>\r\n    {/* <Routes> */}\r\n      {/* <Route exact path=\"/\" element={}/> */}\r\n      {/* <Route exact path=\"/contact\" element={}/> */}\r\n      {/* <Contact mode={mode} /> */}\r\n      {/* <Route exact path=\"/about\" element={}/> */}\r\n      {/* <About mode={mode}/> */}\r\n      {/* <Footer/> */}\r\n      {/* </Routes>  */}\r\n    </>\r\n)}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,KAAK,MAAM,sBAAsB;AACxC;AACA;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAMO,UAAU,GAAC,MAAI;IACnB,IAAGF,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,WAAW;MACjDC,SAAS,CAAC,oBAAoB,EAAE,MAAM,CAAC;IACzC,CAAC,MACG;MACFN,OAAO,CAAC,OAAO,CAAC;MAChBM,SAAS,CAAC,mBAAmB,EAAE,MAAM,CAAC;MACtCJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,iBAAiB;IACzD;EAAC,CAAC;EACF,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMY,SAAS,GAAG,CAACG,OAAO,EAAEC,IAAI,KAAG;IACjCF,QAAQ,CAAC;MACPG,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IACT,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACH,oBACE;IAAA,wBAEE,QAAC,MAAM;MAAC,KAAK,EAAC,UAAU;MAAC,IAAI,EAAET,IAAK;MAAC,UAAU,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9D,QAAC,KAAK;MAAC,KAAK,EAAEM;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACtB,QAAC,IAAI;MAAC,GAAG,EAAC,WAAW;MAAC,GAAG,EAAC,WAAW;MAAC,IAAI,EAAER,IAAK;MAAC,SAAS,EAAEO;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAStE;AACN,CAAC;AAAA,GAtCIR,GAAG;AAAA,KAAHA,GAAG;AAwCT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}